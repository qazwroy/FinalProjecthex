package com.spring.controller;

import java.util.HashMap;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.spring.service.BoardService;
import com.spring.service.MainService;

@Controller
public class MainController {
	
@Autowired MainService mainService;
@Autowired BoardService boardService;
	
	private static final Logger logger = LoggerFactory.getLogger(MainController.class);	

	//메인 리스트 출력
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(Model model) {
		logger.info("홈 요청!");
		mainService.getMainList(model); // 메인창 들어갔을시 메인리스트(신상품) 뿌리기
		return "main";
	}
	
	//상점개설여부 상태 세션담기
	@RequestMapping(value="/getMemShopState")
	public @ResponseBody HashMap<String, String> 
		getMemShopState(@RequestParam("id") String id, HttpSession session){
		logger.info("멤버 상점개설 상태 가져오기");
		return mainService.getMemShopState(id, session);
	}
	
	//상점 개설 -> 상점명 입력값 넣기
	@RequestMapping(value = "/setShopName")
	public @ResponseBody HashMap<String, Object> setShopName(@RequestParam HashMap<String, Object> params){
		logger.info("상점명 입력값 넣기");
		return mainService.setShopName(params);
	}
	
	//상점 개설 -> 상점명 중복확인
	@RequestMapping(value = "/shopOverlay")
	public @ResponseBody HashMap<String, Object> shopOverlay(@RequestParam("shopName") String shopName){
		logger.info("상점명 중복확인");
		return mainService.shopOverlay(shopName);
	}
	
	//상점 개설 -> 상점생성 여부 상태값 변경
	@RequestMapping(value = "/upShopState")
	public @ResponseBody HashMap<String, Object> upShopState(@RequestParam("id") String id){
		logger.info("상점명 입력값 넣기");
		return mainService.upShopState(id);
	}
	
	//개인상점 정보 출력
	@RequestMapping(value = "/getShopInfo")
	public @ResponseBody HashMap<String, Object> getShopInfo(@RequestParam("id") String id){
		logger.info("개인상점 정보 출력");
		return mainService.getShopInfo(id);
	}
	
	//상점Idx 세션값 얻기
	@RequestMapping(value = "/getShopIdx")
	public @ResponseBody HashMap<String, Object> getShopIdx(@RequestParam("id") String id, HttpSession session){
		logger.info("상점 인덱스 값 얻기");
		return mainService.getShopIdx(id, session);
	}
	
	//상품등록 페이지 이동
	@RequestMapping(value="/regProduct")
	public String regProduct() {
		logger.info("상품등록 페이지 이동");
		return "regProduct";
	}
	
	//상품등록 (이미지 제외)
	   @RequestMapping(value = "/proInsert")
	   public @ResponseBody HashMap<String, Integer> proInsert(@RequestParam HashMap<String, String> params){
	      logger.info("상품등록 처리(이미지제외)");
	      return mainService.proInsert(params);
	   }
	
	
	
	@RequestMapping(value="/category")
	public String category(Model model) {
		return "category";
	}
	
	@RequestMapping(value="/speller")
	public String speller(Model model) {
		return "speller";
	}
	
	@RequestMapping(value="/mypage")
	public String mypage(Model model) {
		return "mypage";
	}
	
	@RequestMapping(value="/myproduct")
	public String myproduct(Model model) {
		return "myproduct";
	}
	
	@RequestMapping(value="/mybuy")
	public String mybuy(Model model) {
		return "mybuy";
	}
	
	@RequestMapping(value="/adminpage")
	public String adminpage(Model model) {
		return "adminpage";
	}
	
	@RequestMapping(value="/mycartCall")
	public String mycartCall() {
		return "adminpage";
	}
	
	@RequestMapping(value="/mycart")
	public @ResponseBody HashMap<String, Object> mycart(@RequestParam("id") String id) {
		logger.info("찜 목록 list 요청 ");	
		logger.info("id {}", id);
		return boardService.mycart(id);
	}
	
	@RequestMapping(value="/cartdel")
	public @ResponseBody HashMap<String, Integer> cardel(@RequestParam("cartdel") String cartdel) {
		logger.info("찜삭제 불러오기");
		return boardService.cartdel(cartdel); 
	}
	
	@RequestMapping(value="/myinfo")
	public String myinfo(Model model) {
		return "myinfo";
	}
	
	@RequestMapping(value="/prd_detailForm")
	public String prd_detailForm(Model model) {
		logger.info("상품상세보기");
		return "prd_detailForm";
	}
	
	@RequestMapping(value="/prd_detailcart")
	public String prd_detailsub() {
		logger.info("상품상세보기 팝업창");
		return "prd_detailsub";
	}
	
}
