/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.30
 * Generated at: 2018-07-11 01:26:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mail_005fcheck_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/FinalProjecthee/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/final/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1531112554226L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"></script>\r\n");
      out.write("<title>이메일 인증하기</title>\r\n");
      out.write("<style>\r\n");
      out.write("\t#mail_button{\r\n");
      out.write("\t\tborder: 0;\r\n");
      out.write("\t\toutline: 0;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t\tbackground-color: black;\r\n");
      out.write("\t\tmargin-left: 1%;\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\theight: 20px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#mail_button:hover{\r\n");
      out.write("\t\tbackground-color: white;\r\n");
      out.write("\t\tcolor: black;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#mail_check_success{\r\n");
      out.write("\t\tborder: 0;\r\n");
      out.write("\t\toutline: 0;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t\tbackground-color: black;\r\n");
      out.write("\t\tmargin-left: 1%;\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\theight: 20px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#mail_check_success:hover{\r\n");
      out.write("\t\tbackground-color: white;\r\n");
      out.write("\t\tcolor: black;\r\n");
      out.write("\t}\r\n");
      out.write("\t#mail_check_success{\r\n");
      out.write("\t\tmargin-left: 85%;\r\n");
      out.write("\t}\r\n");
      out.write("\t#fie{\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<fieldset id=\"fie\">\r\n");
      out.write("\t\t<legend>본인확인 이메일 인증</legend>\r\n");
      out.write("\t\t<input type=\"text\" id=\"mail_check\" name=\"mail_check\"\r\n");
      out.write("\t\t\tplaceholder=\"인증번호를 입력하세요\" disabled=\"true\"/> <input type=\"button\" id=\"mail_button\"\r\n");
      out.write("\t\t\tvalue=\"인증번호 요청\" />\r\n");
      out.write("\t</fieldset>\r\n");
      out.write("\t<input type=\"button\" id=\"mail_check_success\" value=\"메일 인증 확인\"/>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\tvar obj = {};//초기화   \r\n");
      out.write("\tobj.type = \"post\";\r\n");
      out.write("\tobj.dataType = \"json\";\r\n");
      out.write("\tobj.enctype = \"multipart/form-data\";\r\n");
      out.write("\tobj.error = function(e) {\r\n");
      out.write("\t\tconsole.log(e)\r\n");
      out.write("\t};\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\tvar num;\r\n");
      out.write("\t$(\"#mail_button\").click(\r\n");
      out.write("\t\t\tfunction() {\r\n");
      out.write("\t\t\t\tobj.url = \"./email_check\";\r\n");
      out.write("\t\t\t\tobj.data = {\r\n");
      out.write("\t\t\t\t\temail : opener.document.getElementById(\"first_email\").value \r\n");
      out.write("\t\t\t\t\t+ \"@\"+ opener.document.getElementById(\"emailview\").value\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tobj.success = function(d) {\r\n");
      out.write("\t\t\t\t\tconsole.log(d.mail_check);\r\n");
      out.write("\t\t\t\t\talert(\"메일로 인증번호를 발송했습니다.\");\r\n");
      out.write("\t\t\t\t\t$(\"#mail_check\").attr(\"disabled\",false);\r\n");
      out.write("\t\t\t\t\tnum = d.mail_check\r\n");
      out.write("\t\t\t\t};\r\n");
      out.write("\t\t\t\tconsole.log(obj);\r\n");
      out.write("\t\t\t\tajaxCall(obj);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#mail_check_success\").click(function(){\r\n");
      out.write("\t\tconsole.log(num);\r\n");
      out.write("\t\tif($(\"#mail_check\").val()==num){\r\n");
      out.write("\t\t\talert(\"메일 인증이 완료되었습니다.\");\r\n");
      out.write("\t\t\twindow.opener.document.getElementById(\"email_enter\").value = \"메일 인증 완료\";\r\n");
      out.write("\t\t\twindow.opener.$(\"#email_enter\").css(\"color\",\"green\");\r\n");
      out.write("\t\t\twindow.open('about:blank','_self').self.close(); \r\n");
      out.write("\t\t} else{\r\n");
      out.write("\t\t\talert(\"인증번호가 다릅니다.\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\tfunction ajaxCall(obj) {\r\n");
      out.write("\t\t$.ajax(obj);\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
