/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.30
 * Generated at: 2018-07-11 01:25:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/FinalProjecthee/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/final/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1531112554226L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("\t#tab1{\r\n");
      out.write("\t\tmargin-left: 40%;\r\n");
      out.write("\t\tmargin-top: 10%;\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#mainimg{\t\t\r\n");
      out.write("\t\tmargin-left: 45%;\r\n");
      out.write("\t\tmargin-top: 5%;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t#loginBtn{\r\n");
      out.write("\t\tborder: 0;\r\n");
      out.write("\t\toutline: 0;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t\tbackground-color: black;\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\theight: 45px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#loginBtn:hover{\r\n");
      out.write("\t\tbackground-color: white;\r\n");
      out.write("\t\tcolor: black;\r\n");
      out.write("\t}\r\n");
      out.write("\t#join{\r\n");
      out.write("\t\tborder: 0;\r\n");
      out.write("\t\toutline: 0;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t\tbackground-color: black;\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\twidth: 130px;\t\r\n");
      out.write("\t}\r\n");
      out.write("\t#join:hover{\r\n");
      out.write("\t\tbackground-color: white;\r\n");
      out.write("\t\tcolor: black;\r\n");
      out.write("\t}\r\n");
      out.write("\t#search{\r\n");
      out.write("\t\tborder: 0;\r\n");
      out.write("\t\toutline: 0;\r\n");
      out.write("\t\tcursor: pointer; \r\n");
      out.write("\t\tbackground-color: black;\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\twidth: 130px;\t\r\n");
      out.write("\t}\r\n");
      out.write("\t#search:hover {\r\n");
      out.write("\t\tbackground-color: white;\r\n");
      out.write("\t\tcolor: black;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<h2 id=\"mainimg\" onclick=\"location.href='./'\"> 슈마니커</h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"tab1\">\r\n");
      out.write("\t\t<table>\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>ID</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" id=\"userId\" placeholder=\"아이디\" /></td>\r\n");
      out.write("\t\t\t\t<td rowspan=\"2\" colspan=\"3\"><input id=\"loginBtn\" type=\"button\" value=\"로그인\" />\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>PW</th>\r\n");
      out.write("\t\t\t\t<td><input type=\"password\" id=\"userPw\" placeholder=\"비밀번호\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"10\"><input id=\"join\" onclick=\"join()\" type=\"button\" value=\"회원가입\" /> \r\n");
      out.write("\t\t\t\t<input id=\"search\" type=\"button\" onclick=\"search()\"\tvalue=\"아이디/비번 찾기\" /></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("function join() {\r\n");
      out.write("\tlocation.href = \"./joinForm\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("var openwin;\r\n");
      out.write("function search() {\r\n");
      out.write("\t// window.name = \"부모창 이름\"; \r\n");
      out.write("\twindow.name = \"parentForm\";\r\n");
      out.write("\t//window.open(\"open할 window\", \"자식창 이름\", \"팝업창 옵션\");\r\n");
      out.write("\topenWin = window.open(\"./mem_search\", \"childForm\",\r\n");
      out.write("\t\t\t\"width=700, height=200, resizable = no, scrollbars = no\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(\"#loginBtn\").click(function() {\r\n");
      out.write("\t//키와 값으로 복수개가 들어간다.\r\n");
      out.write("\t//type: [post|get], url: 어디로 보낼 것인가? \r\n");
      out.write("\t//data: 어떤 파라메터와 값?, dataType: [json|xml|text|html|jsonp]\r\n");
      out.write("\t//success: 성공시 할 일, error: 실패시 할 일\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype : \"post\",\r\n");
      out.write("\t\turl : \"./login\",\r\n");
      out.write("\t\tdata : {\r\n");
      out.write("\t\t\tid : $(\"#userId\").val(),\r\n");
      out.write("\t\t\tpw : $(\"#userPw\").val()\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tdataType : \"json\",\r\n");
      out.write("\t\tsuccess : function(data) {//인자 값은 서버에서 주는 메시지\r\n");
      out.write("\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\tif (data.success) {\r\n");
      out.write("\t\t\t\talert(\"로그인에 성공 했습니다.\");\r\n");
      out.write("\t\t\t\tlocation.href = \"./\";\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\talert(\"로그인에 실패 했습니다.\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror : function(err) {//인자 값은 서버에서 주는 에러 메시지\r\n");
      out.write("\t\t\tconsole.log(err)\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
