/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.30
 * Generated at: 2018-07-11 01:02:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class updateChk_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/FinalProjecthee/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/final/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1531270711351L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <fieldset>\r\n");
      out.write("      <legend>본인확인을 위해 비밀번호를 입력해 주세요.</legend>\r\n");
      out.write("      비밀번호 확인 : <input type=\"password\" name=\"updatePwChk\"\r\n");
      out.write("         placeholder=\"비밀번호 확인 요청\" />\r\n");
      out.write("      <button id=\"upPw\">확인</button>\r\n");
      out.write("   </fieldset>\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("   var msg = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("   if (msg != \"\") {\r\n");
      out.write("      alert(msg);\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("   var obj = {};//초기화   \r\n");
      out.write("   obj.type = \"post\";\r\n");
      out.write("   obj.dataType = \"json\";\r\n");
      out.write("   obj.data = {};\r\n");
      out.write("   obj.error = function(e) {\r\n");
      out.write("      consoles.log(e)\r\n");
      out.write("   };\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   $(\"#upPw\").click(\r\n");
      out.write("         function() {\r\n");
      out.write("            if ($(\"input[name='updatePwChk']\").val() == \"\") {//이름 입력 확인\r\n");
      out.write("               alert(\"비밀번호를 확인 해 주세요!\");\r\n");
      out.write("               $(\"input[name='updatePwChk']\").focus();//포커스 이동\r\n");
      out.write("            } else {\r\n");
      out.write("               console.log(\"업데이트 비밀번호 서버 전송\");\r\n");
      out.write("               obj.url = \"./pwCheck\";\r\n");
      out.write("               obj.data.updatePwChk = $(\"input[name='updatePwChk']\")\r\n");
      out.write("                     .val();\r\n");
      out.write("               obj.success = function(data) {\r\n");
      out.write("                  if (data.success != 1) {\r\n");
      out.write("                     alert(\"비밀번호가 틀렸습니다. 다시 확인해 주세요\");\r\n");
      out.write("                  } else {\r\n");
      out.write("                     alert(\"본인확인이 완료되었습니다.\");\r\n");
      out.write("                     opener.$(\"#before\").css(\"display\",\"none\"); \r\n");
      out.write("                     opener.$(\"#after\").css(\"display\",\"\");\r\n");
      out.write("                     window.open(\"about:blank\", \"_self\").close();\r\n");
      out.write("                  }\r\n");
      out.write("               }\r\n");
      out.write("               console.log(obj);\r\n");
      out.write("               ajaxCall(obj);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("         });\r\n");
      out.write("   function ajaxCall(obj) {\r\n");
      out.write("      $.ajax(obj);\r\n");
      out.write("   }\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
